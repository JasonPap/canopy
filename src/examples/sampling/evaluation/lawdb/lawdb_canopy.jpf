#
# MIT License
#
# Copyright (c) 2017 The ISSTAC Authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

@using canopy
#@using jpf-symbc

target = sampling.evaluation.lawdb.Driver

# 1 is INSERT, 8 is SEARCH
target.args = 8

#classpath=${jpf-security}/build/examples
#sourcepath=${jpf-security}/src/examples
/
symbolic.security.sampling.statecache=edu.cmu.sv.isstac.sampling.exploration.cache.HashingCache
#listener=gov.nasa.jpf.symbc.tree.visualizer.DOTVisualizerListener
symbolic.visualizer.outputpath=${canopy}
#shell=edu.cmu.sv.isstac.sampling.mcts.MCTSShell
shell=edu.cmu.sv.isstac.sampling.montecarlo.MonteCarloShell
#symbolic.dp=z3bitvector


symbolic.dp=z3
#symbolic.dp=z3inc
#listener=gov.nasa.jpf.symbc.numeric.solvers.IncrementalListener
#symbolic.optimizechoices=false

#target=sampling.QuickSortJDK15
#target.args=8

symbolic.security.sampling.mcts.uct.bias=5

symbolic.security.sampling.termination.samplingsize=50
symbolic.security.sampling.seed=-1359243304

symbolic.security.sampling.modelcounting.problemsettings=${canopy}/src/examples/mcts/quicksort.up
#symbolic.method=engagement1.lawdb.UDPServerHandler.channelRead0(con#con#con#con)
#symbolic.security.sampling.measuredmethods=mcts.java15.util.Arrays.sort(con)

#symbolic.security.sampling.choicesstrategy=edu.cmu.sv.isstac.sampling.exploration
#.AllChoicesStrategy

#symbolic.debug = true

symbolic.security.sampling.stats=true
symbolic.security.sampling.livestats=false

symbolic.security.sampling.modelcounting.amplifyrewards=false

symbolic.security.sampling.mcts.weightedsampling=false

symbolic.security.sampling.mcts.treevisualizer=false





#
#
#
#
#
#
##listener=sidechannel.singlerun.SideChannelQuantifier
##listener=sidechannel.singlerun.PathInspector
#
##shell=sidechannel.canopy.probabilistic.SymbolicShannonShell
#shell=sidechannel.canopy.probabilistic.SymbolicRenyiShell
#
##canopy options:
#symbolic.security.sampling.termination.samplingsize=50
#symbolic.security.sampling.livestats=false
##symbolic.security.sampling.statecache=edu.cmu.sv.isstac.sampling.exploration.cache.NoCache
#symbolic.security.sampling.stats=false
#symbolic.optimizechoices=false
#
#sidechannel = timing
#
#symbolic.debug = false
#
#symbolic.dp=z3bitvectorinc
#
#sidechannel.high_input_size = 1
#
#SMT.theory = linear
#
#cost.interval = 2
#
#symbolic.reliability.tmpDir=${jpf-security}/build/tmp
#symbolic.reliability.omegaPath=${jpf-security}/tools/omega/oc
#symbolic.reliability.lattePath=${jpf-security}/tools/latte-integrale-1.7.3/bin/count
#symbolic.reliability.barvinokPath=${jpf-security}/tools/barvinok-0.39/bin/iscc
#
#symbolic.counter=barvinok
#
#symbolic.min_int=0
#symbolic.max_int=1023
#
#sidechannel.verbose = false
